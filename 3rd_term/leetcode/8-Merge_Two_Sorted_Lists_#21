8-Merge Two Sorted Lists #21
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
    if(l1 == nullptr) 
        return l2;
    if(l2 == NULL) 
        return l1;
        
    if (l2->val < l1->val) {
        ListNode *a1 = l1;
        l1 = l2;
        l2 = a1;
    }
    ListNode *output = l1;
        
    while (true) {
        if (l1->next == nullptr) {
            l1->next = l2;
            break;
        }
        if (l2->val < l1->next->val) {
            ListNode *a2 = l1->next;
            l1->next = l2;
            l2 = a2;
        if (l2 == nullptr)
                break;
        } else {
            l1 = l1->next;
        }
    }
    return output;
}
};
